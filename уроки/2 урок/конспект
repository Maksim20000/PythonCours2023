Теория 1

Переменная — ячейка памяти в компьютере, в которой можно хранить любые данные (числа, слова, предложения).
Для того чтобы создать переменную, в первую очередь нужно придумать ей имя.

Например, переменную, которая будет хранить в себе ваше имя, можно назвать name, а переменную с вашим возрастом – age.
После этого ей нужно задать значение. Это может быть символ, строка или число. 
Строки и символы указываются в кавычках:

name = "Имя"

Числа и цифры указываются без кавычек:
age = 14
 
Несколько правил по использованию переменных:
Можно использовать только латинские буквы, цифры и нижние подчеркивания;
Имя переменной не может начинаться с числа;

Python чувствителен к регистру символов, это значит, что переменные abc и aBc – это две разные переменные;
Вам будет гораздо удобнее работать с кодом, если название переменной будет отображать его содержание.


Практическая работа номер 1

Предлагаю попрактиковаться и посчитать количество минут в одной неделе. 

У вас уже есть переменная minutes, которая хранит в себе количество минут в одном часе. Создайте также переменные hours (для количества часов в одном дне) и days (для количества дней в неделе).
Для того чтобы получить количество минут в одной неделе, вам нужно лишь перемножить получившиеся переменные между собой и вывести ответ в консоль. 

Несколько арифметических операций мы уже применили, давайте познакомимся со всеми:


Сложение: знак +
Вычитание: знак -
Умножение: знак *
Деление: знак /


Теория 2
Чтобы сохранить строку в переменную, ее нужно записать в кавычках:
name = "Имя"

Давайте попробуем совершить 4 операции со строками и посмотреть какие из них возможны, а какие вернут ошибку:
Строка + строка

name = "Имя "
surname = "Фамилия"
b = 5

print(name + surname)
// Имя Фамилия

print(name * surname)
;TypeError: can't multiply sequence by non-int of type 'str' on line 4
эта ошибка говорит о том что нельзя перемножать строки

print(name + b)
; TypeError: cannot concatenate 'str' and 'int' objects on line 4
эта ошибка говорит о том что нельзя складывать строку и число

print(name * b)
Имя Имя Имя Имя Имя 
Выведется 5 раз 

Мы можем складывать строки друг с другом, чтобы получить одну строку, а также можем умножить строку на число, чтобы вывести строку несколько раз



Практическое задание 2
Создайте две переменные которые будут хранить в себе строчные значения и попрактикуйтесь на них поскладывайте умножте короче сделайте все чтобы закрепить тему



Финальные вопросы по этой теме
1) Какие операторы можно применить к строкам?
    1. +, -
    2. -, *
    3. +, *

2) Выберите верное действие:
    1. Строка + число
    2.Строка * строка
    3.строка * число



Теория 3
Мы умеем работать со строками, а где это может пригодиться? Например, для составления какого-то сообщения для рассылки или формирования приветствия в программе, которое обратится к пользователю по имени.

Для соединения строк их нужно привести к одному виду. То есть, чтобы все составляющие итоговой строки тоже были строками.

Но иногда возникает необходимость вывести сразу несколько разных типов данных. Тогда можно вывести их через запятую.


Например, создадим две переменные, в одной запишем свой возраст, в другой свое имя:

name = "Имя"
age = 14
После этого мы можем вывести информацию следующим образом:

print("Меня зовут", name, "и мне", age, "лет")


Практическая работа 3
Как узнать, сколько времени будет передаваться файл? 

Формула, по которой можно посчитать время, словами выражается так:

«Время передачи равно размеру файла, деленному на скорость передачи»


Размер файла составляет 200 мб, а скорость передачи 80 мб/сек. Сколько времени уйдет на отправку файла?
ЭТОТ ПРИмер похож на скорость путь и время которые рассчитываются так весь путь разделить на скорость и так мы найдем время


